Got it ‚Äî I‚Äôll take the working examples we built earlier and swap:

- **Dataset**: `test_bk` ‚Üí `bk9`
- **Token**: use your **Server Token** `429b18690390adfa776f0b727dfc78cc` (since these are server‚Äëto‚Äëserver calls)

---

## 1Ô∏è‚É£ `any` ‚Äî Heating contains `"Electric"`

```bash
curl "https://api.paragonapi.com/api/v2/OData/bk9/Properties?access_token=429b18690390adfa776f0b727dfc78cc&$filter=Heating/any(a: a eq 'Electric')" \
  -H "Accept: application/json"
```

---

## 2Ô∏è‚É£ `all` ‚Äî Flooring all `"Hardwood"`

```bash
curl "https://api.paragonapi.com/api/v2/OData/bk9/Properties?access_token=429b18690390adfa776f0b727dfc78cc&$filter=Flooring/all(a: a eq 'Hardwood')" \
  -H "Accept: application/json"
```

---

## 3Ô∏è‚É£ `geo.distance` ‚Äî within 1 mile of example coords

```bash
curl "https://api.paragonapi.com/api/v2/OData/bk9/Properties?access_token=429b18690390adfa776f0b727dfc78cc&$filter=geo.distance(Coordinates, POINT(-84.738905 33.399165)) lt 1" \
  -H "Accept: application/json"
```

---

## 4Ô∏è‚É£ `geo.intersects` ‚Äî tiny polygon around example coords

```bash
curl "https://api.paragonapi.com/api/v2/OData/bk9/Properties?access_token=429b18690390adfa776f0b727dfc78cc&$filter=geo.intersects(Coordinates, POLYGON((-84.55 33.44,-84.55 33.45,-84.54 33.45,-84.54 33.44,-84.55 33.44)))" \
  -H "Accept: application/json"
```

---

## 5Ô∏è‚É£ `tolower` ‚Äî case‚Äëinsensitive StandardStatus match

```bash
curl "https://api.paragonapi.com/api/v2/OData/bk9/Properties?access_token=429b18690390adfa776f0b727dfc78cc&$filter=tolower(StandardStatus) eq 'active'&$select=UnparsedAddress,City,StandardStatus&$top=10" \
  -H "Accept: application/json"
```

---

## 6Ô∏è‚É£ `startswith` ‚Äî City starts with `"Haag"`

```bash
curl "https://api.paragonapi.com/api/v2/OData/bk9/Properties?access_token=429b18690390adfa776f0b727dfc78cc&$filter=startswith(City,'Haag')" \
  -H "Accept: application/json"
```

---

üí° **Tip:**  
If you want lightweight results with photos for any of these, just append:

```
&$select=UnparsedAddress,City,StandardStatus,Media&$top=5
```

to the URL.

below is wokring one
https://api.paragonapi.com/api/v2/OData/bk9/Property?access_token=429b18690390adfa776f0b727dfc78cc&$filter=contains(tolower(UnparsedAddress),'19863 cottonwood')&$select=UnparsedAddress,City,StandardStatus,Mediahttps://api.paragonapi.com/api/v2/OData/bk9/Property?access_token=429b18690390adfa776f0b727dfc78cc&$filter=contains(tolower(UnparsedAddress),'19863 cottonwood')&$select=UnparsedAddress,City,StandardStatus,Media

This gives
{
"value": [
{
"Media": [],
"City": "Gretna",
"StandardStatus": "Closed",
"UnparsedAddress": "19863 Cottonwood Street # 216, Gretna NE 68028",
"FeedTypes": [
"BBO"
],
"ListingKey": "97e57960813fdb0a2b81736333bdcffa",
"@odata.id": "https://api.paragonapi.com/api/v2/OData/bk9/Property('97e57960813fdb0a2b81736333bdcffa')"
},
{
"Media": [
{
"Order": 1,
"MediaKey": "bee7e16cc5de4d1b58ec1d079f69d8f3-m1",
"MediaURL": "http://cdnparap70.paragonrels.com/ParagonImages/Property/P7/GPRMLS/22302671/0/0/0/45c0b795dc0308982144059b0c4730da/48/633d8361276278f31cd80996b8d25e34/22302671.JPG",
"ResourceRecordKey": "bee7e16cc5de4d1b58ec1d079f69d8f3",
"ResourceName": "Property",
"ClassName": "Residential",
"MediaCategory": "Photo",
"MimeType": "image/jpeg",
"MediaObjectID": "22302671_1",
"ShortDescription": null
},
{
"Order": 2,
"MediaKey": "bee7e16cc5de4d1b58ec1d079f69d8f3-m2",
"MediaURL": "http://cdnparap70.paragonrels.com/ParagonImages/Property/P7/GPRMLS/22302671/1/0/0/3fe0567df0d77a6b6ab531751d5fb863/48/633d8361276278f31cd80996b8d25e34/22302671-1.JPG",
"ResourceRecordKey": "bee7e16cc5de4d1b58ec1d079f69d8f3",
"ResourceName": "Property",
"ClassName": "Residential",
"MediaCategory": "Photo",
"MimeType": "image/jpeg",
"MediaObjectID": "22302671_2",
"ShortDescription": null
}
],
"City": "Gretna",
"StandardStatus": "Closed",
"UnparsedAddress": "19863 Cottonwood Street, Gretna NE 68028",
"FeedTypes": [
"BBO"
],
"ListingKey": "bee7e16cc5de4d1b58ec1d079f69d8f3",
"@odata.id": "https://api.paragonapi.com/api/v2/OData/bk9/Property('bee7e16cc5de4d1b58ec1d079f69d8f3')"
}
],
"@odata.context": "https://api.paragonapi.com/api/v2/OData/bk9/$metadata#Property",
"@odata.count": 2
}

Return listings that are near specific co-ordinates, to a radius of 0.5 miles
https://api.paragonapi.com/api/v2/OData/dataset_id/Properties?access_token=access_token&$filter=geo.distance(Coordinates, POINT(-118.62 34.22)) lt 0.5

// sample
https://api.paragonapi.com/api/v2/OData/bk9/Property('bee7e16cc5de4d1b58ec1d079f69d8f3')?access_token=429b18690390adfa776f0b727dfc78cc

this api gives infor from the property
